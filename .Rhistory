library(quantmod)
?getSymbols
symbols <- stockSymbols()
View(symbols)
?stockSymbols
symbols <- stockSymbols("NASDAQ")
View(symbols)
mySymbol <- "AngioDynamics, Inc."
SymbolToGet <- symbols$Symbol[symbols$Name == mySymbol]
getSymbols(SymbolToGet)
?getSymbols
data <- getSymbols(SymbolToGet)
data <- loadSymbols(SymbolToGet)
plot(ANGO)
plot(ANGO["2013.01.01:2016.12.31"])
plot(ANGO["2013.01.01:2016.12.31",])
View(ANGO)
plot(ANGO["2013.-01-01:2016-12-31"])
data <- ANGO
getSymbols(SymbolToGet, auto.assign = F)
d <- getSymbols(SymbolToGet, auto.assign = F)
View(d)
head(close(d))
head(Close(d))
?Cl
head(Cl(d))
dPlot <- Cl(d)
dataToPlot <- Cl(d)
View(dataToPlot)
plot(dataToPlot)
head(Cl(d['2007']))
head(Cl(d['2009']))
?year
View(symbols)
mySymbol2 <- "Advanced Energy Industries, Inc."
SymbolToGet2 <- symbols$Symbol[symbols$Name == mySymbol2]
d2 <- getSymbols(SymbolToGet2, auto.assign = F)
dataToPlot2 <- Cl(d2)
lines(dataToPlot2)
lines(dataToPlot2, col = "blue")
plot(dataToPlot, col="red")
lines(dataToPlot2, col = "blue")
plot(dataToPlot)
plot(dataToPlot, col="red")
lines(dataToPlot, col="red")
plot(dataToPlot)
lines(dataToPlot, col="red")
lines(dataToPlot2, col = "blue")
library(ggplot2)
View(d)
g <- ggplot(dataToPlot)
View(dataToPlot)
names(dataToPlot) <- "Close"
g <- ggplot(dataToPlot, aes(y=Close))
g + geom_line()
View(dataToPlot)
d$Date <- as.Date(row.names(d))
head(row.names(d))
d$Date <- as.Date(row.names(as.data.frame(d)))
View(d)
?as.Date
d$Date <- base::as.Date(row.names(as.data.frame(d)))
class(d$Date)
d$Date <- base::as.Date(index(d))
View(d)
d$Date <- as.Date(index(d))
View(d)
dataToPlot <- Cl(d)
View(dataToPlot)
dataToPlot$Date <- as.Date(index(dataToPlot))
dataToPlot <- Cl(d)
names(dataToPlot) <- "Close"
dataToPlot$Date <- as.Date(index(dataToPlot))
View(dataToPlot)
g <- ggplot(dataToPlot, aes(x=Date, y=Close))
g <- ggplot(dataToPlot, aes(x=Date, y=Close)) + geom_line()
g
View(dataToPlot)
d <- getSymbols(SymbolToGet, auto.assign = F)
dataToPlot <- Cl(d)
View(dataToPlot)
names(dataToPlot) <- "Close"
View(dataToPlot)
dataToPlot$Date <- as.Date(index(dataToPlot))
View(dataToPlot)
dataToPlot <- Cl(d)
names(dataToPlot) <- "Close"
index(dataToPlot) <- as.Date(index(dataToPlot))
View(dataToPlot)
dataToPlot <- Cl(d)
names(dataToPlot) <- "Close"
View(dataToPlot)
index(dataToPlot) <- as.Date(index(dataToPlot))
g <- ggplot(dataToPlot, aes(x=index, y=Close)) + geom_line()
g
?tidy
??tidy
install.packages("broom")
library(broom)
dataToPlot <- tidy(dataToPlot)
View(dataToPlot)
g <- ggplot(dataToPlot, aes(x=index, y=value)) + geom_line()
g
g <- ggplot(dataToPlot, aes(x=index, y=value)) + geom_line(color="blue")
g
g <- ggplot(dataToPlot, aes(x=index, y=value)) + geom_line(color="darkblue")
g
g <- ggplot(dataToPlot, aes(x=index, y=value)) + geom_line(color="steelblue")
g
mySymbol <- c("AngioDynamics, Inc.", "Advanced Energy Industries, Inc.")
SymbolToGet <- symbols$Symbol[symbols$Name == mySymbol]
d <- getSymbols(SymbolToGet, auto.assign = F)
mySymbol <- list("AngioDynamics, Inc.", "Advanced Energy Industries, Inc.")
SymbolToGet <- symbols$Symbol[symbols$Name == mySymbol]
d <- getSymbols(SymbolToGet, auto.assign = F)
SymbolToGet <- symbols$Symbol[symbols$Name %in% mySymbol]
d <- getSymbols(SymbolToGet, auto.assign = F)
d <- getSymbols(SymbolToGet, auto.assign = T)
?name
name(AEIS)
base::name(AEIS)
shiny::runApp()
runApp()
?sidebarPanel
runApp()
runApp()
?stockSymbols
?radioButtons
runApp()
runApp()
runApp()
runApp()
library(shiny)
?renderUI
?selectInput
View(symbols)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
d <- getSymbols(SymbolToGet, auto.assign = F)
dataToPlot <- Cl(d)
symbolToGet <- "AEIS"
d <- getSymbols(SymbolToGet, auto.assign = F)
symbolToGet
d <- getSymbols(SymbolToGet, auto.assign = F)
rm(list=ls())
rm(list=ls())
library(shiny)
library(quantmod)
library(ggplot2)
library(broom)
SymbolToGet <- "AEIS"
d <- getSymbols(SymbolToGet, auto.assign = F)
?getSymbols
runApp()
?conditionalPanel
as.character(2=3)
as.character(2==3)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
d <- stockSymbols("NYSE")
tail(d)
?selectInput
runApp()
runApp()
runApp()
View(d)
input$selectExchange <- "NYSE"
input <- list()
input$selectExchange <- "NYSE"
d <- stockSymbols(input$selectExchange) %>%
mutate(SymbolName = paste(Name, Symbol))
library(dplyr)
d <- stockSymbols(input$selectExchange) %>%
mutate(SymbolName = paste(Name, Symbol))
View(d)
d <- stockSymbols(input$selectExchange) %>%
mutate(SymbolName = paste0(Name, " (", Symbol, ")"))
runApp()
library(markdown)
?includeMarkdown
runApp()
shiny::runApp()
runApp()
?getSymbols
runApp()
runApp()
?getSymbols.yahooj
runApp()
runApp()
runApp()
?stockSymbols
?getYahooData
runApp()
